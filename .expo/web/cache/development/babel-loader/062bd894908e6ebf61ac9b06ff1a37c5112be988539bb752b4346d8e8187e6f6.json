{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nvar screenWidth = Dimensions.get('window').width;\nimport { loginApi } from \"./loginApi\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    width: screenWidth,\n    backgroundColor: 'white'\n  },\n  input: {\n    width: '80%',\n    marginVertical: 10,\n    padding: 10,\n    borderBottomWidth: 1,\n    borderColor: 'black'\n  },\n  image: {\n    width: screenWidth,\n    height: '35%',\n    resizeMode: 'cover'\n  },\n  login: {\n    fontSize: 50,\n    margin: 0\n  },\n  customButton: {\n    width: '35%',\n    height: 50,\n    backgroundColor: '#3498db',\n    borderRadius: 15,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 18\n  }\n});\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    message = _useState6[0],\n    setMessage = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    keyboardOpen = _useState8[0],\n    setKeyboardOpen = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    token = _useState10[0],\n    setToken = _useState10[1];\n  useEffect(function () {\n    var keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', function () {\n      setKeyboardOpen(true);\n    });\n    var keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', function () {\n      setKeyboardOpen(false);\n    });\n    return function () {\n      keyboardDidShowListener.remove();\n      keyboardDidHideListener.remove();\n    };\n  }, []);\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.post('http://10.0.112.80:5000/', {\n          email: email,\n          password: password\n        });\n        var _token = response.data.accessToken;\n        setToken(_token);\n        setMessage(false);\n        navigation.navigate('Welcome', {\n          user: response.data.user\n        });\n        console.log(_token);\n      } catch (error) {\n        console.error('Login error:', error);\n        setMessage(true);\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [!keyboardOpen && _jsx(Image, {\n      source: require(\"../images/logo.jpg\"),\n      style: styles.image\n    }), _jsx(Image, {\n      source: require(\"../images/effect.png\"),\n      style: {\n        width: '100%',\n        height: 50,\n        marginTop: 0,\n        resizeMode: 'stretch'\n      }\n    }), _jsx(Text, {\n      style: styles.login,\n      children: \"Login\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      },\n      value: email\n    }), message && _jsx(Text, {\n      style: {\n        width: '80%',\n        textAlign: 'left',\n        color: 'red'\n      },\n      children: \"T\\xE0i kho\\u1EA3n ho\\u1EB7c m\\u1EADt kh\\u1EA9u kh\\xF4ng ch\\xEDnh x\\xE1c\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      value: password\n    }), _jsx(View, {\n      style: {\n        width: '80%',\n        alignItems: 'flex-end',\n        marginTop: 30\n      },\n      children: _jsx(TouchableOpacity, {\n        style: styles.customButton,\n        onPress: handleLogin,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Login\"\n        })\n      })\n    })]\n  });\n};\nexport default Login;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","Button","StyleSheet","Image","Dimensions","TouchableOpacity","KeyboardAvoidingView","Keyboard","screenWidth","get","width","loginApi","axios","jsx","_jsx","jsxs","_jsxs","styles","create","container","flex","alignItems","backgroundColor","input","marginVertical","padding","borderBottomWidth","borderColor","image","height","resizeMode","login","fontSize","margin","customButton","borderRadius","justifyContent","buttonText","color","Login","_ref","navigation","route","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","message","setMessage","_useState7","_useState8","keyboardOpen","setKeyboardOpen","_useState9","_useState10","token","setToken","keyboardDidShowListener","addListener","keyboardDidHideListener","remove","handleLogin","_ref2","_asyncToGenerator","response","post","data","accessToken","navigate","user","console","log","error","apply","arguments","style","children","source","require","marginTop","placeholder","onChangeText","text","value","textAlign","secureTextEntry","onPress"],"sources":["D:/Finacial-Management/front-end/components/Login.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { View,Text, TextInput, Button, StyleSheet, Image,Dimensions, TouchableOpacity, KeyboardAvoidingView, Keyboard  } from 'react-native';\r\nconst screenWidth = Dimensions.get('window').width;\r\nimport { loginApi } from './loginApi';\r\nimport axios from 'axios'\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex:1,\r\n      alignItems: 'center',\r\n      width:screenWidth,\r\n      backgroundColor:'white',\r\n\r\n    },\r\n    input: {\r\n      width: '80%',\r\n      marginVertical: 10,\r\n      padding: 10,\r\n      borderBottomWidth: 1,\r\n      borderColor: 'black',\r\n    },\r\n    image:{\r\n        width: screenWidth ,\r\n        height: '35%' ,\r\n        resizeMode: 'cover',\r\n    },\r\n    login:{\r\n        fontSize: 50,\r\n        margin: 0,\r\n    },\r\n    customButton: {\r\n        width: '35%',\r\n        height: 50,\r\n        backgroundColor: '#3498db',\r\n        borderRadius: 15,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontSize: 18,\r\n      },\r\n  });\r\nconst Login = ({navigation, route}) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    // const { setIsLoggedIn } = route.params;\r\n    const [message, setMessage] = useState(false);\r\n    const [keyboardOpen, setKeyboardOpen] = useState(false);\r\n    const [token, setToken] = useState('')\r\n\r\n    useEffect(() => {\r\n        const keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', () => {\r\n          setKeyboardOpen(true);\r\n        });\r\n        const keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', () => {\r\n          setKeyboardOpen(false);\r\n        });\r\n    \r\n        return () => {\r\n          keyboardDidShowListener.remove();\r\n          keyboardDidHideListener.remove();\r\n        };\r\n      }, []);\r\n\r\n    // const handleLogin = () => {\r\n    //     loginApi(username, password)\r\n    //         .then(user => {\r\n    //             // Đăng nhập thành công, thực hiện các hành động cần thiết (ví dụ: lưu thông tin người dùng vào trạng thái ứng dụng)\r\n    //             // Sau đó, điều hướng đến màn hình Home\r\n    //             setMessage(false);\r\n\r\n    //             navigation.navigate('Welcome', { user:user });\r\n    //         })\r\n    //         .catch(error => {\r\n    //             // Hiển thị thông báo lỗi nếu xác thực không thành công\r\n    //             setMessage(true);\r\n    //             Alert.alert('Error', error.message);\r\n    //         });\r\n    //   };\r\n\r\n    const handleLogin = async () =>{\r\n        try{\r\n            const response = await axios.post('http://10.0.112.80:5000/',{\r\n                email: email,\r\n                password: password,\r\n            });\r\n            const token = response.data.accessToken;\r\n            setToken(token);\r\n            setMessage(false);\r\n            navigation.navigate('Welcome',{user:response.data.user})\r\n            console.log(token)\r\n        }catch(error){\r\n            console.error('Login error:', error)\r\n            setMessage(true);\r\n        }\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            {\r\n                !keyboardOpen && (\r\n                    <Image\r\n                        source={require('../images/logo.jpg')} // Đường dẫn đến ảnh trong thư mục assets\r\n                        style={styles.image}\r\n                    />\r\n                )\r\n            }\r\n\r\n            <Image\r\n                source={require('../images/effect.png')}\r\n                style={{width:'100%',height:50,marginTop:0,resizeMode:'stretch'}}\r\n            />\r\n            {/* <View style={{width:'80%'}}>\r\n                <Text onPress={{}}>\r\n                    {`< Back`}\r\n                </Text>\r\n            </View> */}\r\n            <Text style={styles.login}>\r\n                Login\r\n            </Text>\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Email\"\r\n                onChangeText={(text) => setEmail(text)}\r\n                value={email}\r\n            />\r\n            {message &&\r\n                <Text style={{width:'80%',textAlign:'left',color:'red'}}>Tài khoản hoặc mật khẩu không chính xác</Text>\r\n            }\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Password\"\r\n                secureTextEntry\r\n                onChangeText={(text) => setPassword(text)}\r\n                value={password}\r\n            />\r\n            {/* <Button title=\"Login\" onPress={handleLogin} style={styles.button} color={'black'} fontSize={'10px'} /> */}\r\n            <View style={{width:'80%',alignItems:'flex-end',marginTop:30}}>\r\n                <TouchableOpacity style={styles.customButton} onPress={handleLogin}>\r\n                    <Text style={styles.buttonText}>Login</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}