{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar screenWidth = Dimensions.get('window').width;\nvar styles = StyleSheet.create({\n  container: {\n    flex: '1',\n    alignItems: 'center',\n    width: screenWidth\n  },\n  input: {\n    width: '80%',\n    marginVertical: 5,\n    padding: 10,\n    borderBottomWidth: 1,\n    borderColor: 'black',\n    opacity: '0.5'\n  },\n  image: {\n    width: screenWidth,\n    height: '35%',\n    resizeMode: 'cover'\n  },\n  login: {\n    fontSize: '50px',\n    margin: '0px'\n  },\n  customButton: {\n    width: '35%',\n    height: 50,\n    backgroundColor: '#3498db',\n    borderRadius: 15,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 18\n  }\n});\nvar Login = function Login() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    username = _useState4[0],\n    setUsername = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var handleLogin = function handleLogin() {\n    console.log('Username:', username);\n    console.log('Password:', password);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: require(\"../images/logo.jpg\"),\n      style: styles.image\n    }), _jsx(Image, {\n      source: require(\"../images/effect.png\"),\n      style: {\n        width: '100%',\n        height: 50,\n        marginTop: '0px',\n        resizeMode: 'stretch',\n        opacity: '1'\n      }\n    }), _jsx(View, {\n      style: {\n        width: '80%'\n      },\n      children: _jsx(Text, {\n        onPress: {},\n        children: `< Back`\n      })\n    }), _jsx(Text, {\n      style: styles.login,\n      children: \"Sign Up\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Full Name\",\n      onChangeText: function onChangeText(text) {\n        return setName(text);\n      },\n      value: username\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      onChangeText: function onChangeText(text) {\n        return setUsername(text);\n      },\n      value: username\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      value: password\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Re-enter Password\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      value: password\n    }), _jsx(View, {\n      style: {\n        width: '80%',\n        alignItems: 'flex-end',\n        marginTop: '5px'\n      },\n      children: _jsx(TouchableOpacity, {\n        style: styles.customButton,\n        onPress: handleLogin,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Register\"\n        })\n      })\n    })]\n  });\n};\nexport default Login;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","StyleSheet","Image","Dimensions","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","screenWidth","get","width","styles","create","container","flex","alignItems","input","marginVertical","padding","borderBottomWidth","borderColor","opacity","image","height","resizeMode","login","fontSize","margin","customButton","backgroundColor","borderRadius","justifyContent","buttonText","color","Login","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","username","setUsername","_useState5","_useState6","password","setPassword","handleLogin","console","log","style","children","source","require","marginTop","onPress","placeholder","onChangeText","text","value","secureTextEntry"],"sources":["D:/Finacial-Management/front-end/components/Register.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport { View,Text, TextInput, Button, StyleSheet, Image,Dimensions, TouchableOpacity  } from 'react-native';\r\nconst screenWidth = Dimensions.get('window').width;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex:'1',\r\n      alignItems: 'center',\r\n      width:screenWidth,\r\n    },\r\n    input: {\r\n      width: '80%',\r\n      marginVertical: 5,\r\n      padding: 10,\r\n      borderBottomWidth: 1,\r\n      borderColor: 'black',\r\n      opacity: '0.5',\r\n    //   borderRadius: 5,\r\n    },\r\n    image:{\r\n        width: screenWidth ,\r\n        height: '35%' ,\r\n        resizeMode: 'cover',\r\n        \r\n        \r\n    },\r\n    login:{\r\n        fontSize: '50px',\r\n        margin: '0px',\r\n    },\r\n\r\n\r\n    customButton: {\r\n        width: '35%',\r\n        height: 50,\r\n        backgroundColor: '#3498db',\r\n        borderRadius: 15,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontSize: 18,\r\n      },\r\n  });\r\nconst Login = () => {\r\n    const [name, setName] = useState('')\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const handleLogin = () => {\r\n        // Thực hiện xử lý đăng nhập ở đây\r\n        console.log('Username:', username);\r\n        console.log('Password:', password);\r\n      };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n\r\n            <Image\r\n                source={require('../images/logo.jpg')} // Đường dẫn đến ảnh trong thư mục assets\r\n                style={styles.image}\r\n            />\r\n            <Image\r\n                source={require('../images/effect.png')}\r\n                style={{width:'100%',height:50,marginTop:'0px',resizeMode:'stretch',opacity:'1'}}\r\n\r\n            />\r\n            <View style={{width:'80%'}}>\r\n                <Text onPress={{}}>\r\n                    {`< Back`}\r\n                </Text>\r\n            </View>\r\n            <Text style={styles.login}>\r\n                Sign Up\r\n            </Text>\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Full Name\"\r\n                onChangeText={(text) => setName(text)}\r\n                value={username}\r\n            />\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Email\"\r\n                onChangeText={(text) => setUsername(text)}\r\n                value={username}\r\n            />\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Password\"\r\n                secureTextEntry\r\n                onChangeText={(text) => setPassword(text)}\r\n                value={password}\r\n            />\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Re-enter Password\"\r\n                secureTextEntry\r\n                onChangeText={(text) => setPassword(text)}\r\n                value={password}\r\n            />\r\n            {/* <Button title=\"Login\" onPress={handleLogin} style={styles.button} color={'black'} fontSize={'10px'} /> */}\r\n            <View style={{width:'80%',alignItems:'flex-end',marginTop:'5px'}}>\r\n                <TouchableOpacity style={styles.customButton} onPress={handleLogin}>\r\n                    <Text style={styles.buttonText}>Register</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}