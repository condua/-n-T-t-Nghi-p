{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Test = function Test() {\n  var _useState = useState('auto'),\n    _useState2 = _slicedToArray(_useState, 2),\n    widthType = _useState2[0],\n    setWidthType = _useState2[1];\n  var _useState3 = useState('auto'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    heightType = _useState4[0],\n    setHeightType = _useState4[1];\n  return _jsx(PreviewLayout, {\n    widthType: widthType,\n    heightType: heightType,\n    widthValues: ['auto', 300, '80%'],\n    heightValues: ['auto', 200, '60%'],\n    setWidthType: setWidthType,\n    setHeightType: setHeightType,\n    children: _jsxs(View, {\n      style: {\n        alignSelf: 'flex-start',\n        backgroundColor: 'aliceblue',\n        height: heightType,\n        width: widthType,\n        padding: 15\n      },\n      children: [_jsx(View, {\n        style: [styles.box, {\n          backgroundColor: 'powderblue'\n        }]\n      }), _jsx(View, {\n        style: [styles.box, {\n          backgroundColor: 'skyblue'\n        }]\n      }), _jsx(View, {\n        style: [styles.box, {\n          backgroundColor: 'steelblue'\n        }]\n      })]\n    })\n  });\n};\nvar PreviewLayout = function PreviewLayout(_ref) {\n  var children = _ref.children,\n    widthType = _ref.widthType,\n    heightType = _ref.heightType,\n    widthValues = _ref.widthValues,\n    heightValues = _ref.heightValues,\n    setWidthType = _ref.setWidthType,\n    setHeightType = _ref.setHeightType;\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1,\n      padding: 10\n    },\n    children: [_jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"width \"\n      }), widthValues.map(function (value) {\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return setWidthType(value);\n          },\n          style: [styles.button, widthType === value && styles.selected],\n          children: _jsx(Text, {\n            style: [styles.buttonLabel, widthType === value && styles.selectedLabel],\n            children: value\n          })\n        }, value);\n      })]\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"height \"\n      }), heightValues.map(function (value) {\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return setHeightType(value);\n          },\n          style: [styles.button, heightType === value && styles.selected],\n          children: _jsx(Text, {\n            style: [styles.buttonLabel, heightType === value && styles.selectedLabel],\n            children: value\n          })\n        }, value);\n      })]\n    }), children]\n  });\n};\nvar styles = StyleSheet.create({\n  box: {\n    width: 50,\n    height: 50\n  },\n  row: {\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  button: {\n    padding: 8,\n    borderRadius: 4,\n    backgroundColor: 'oldlace',\n    alignSelf: 'flex-start',\n    marginRight: 10,\n    marginBottom: 10\n  },\n  selected: {\n    backgroundColor: 'coral',\n    shadowOpacity: 0,\n    borderWidth: 0\n  },\n  buttonLabel: {\n    fontSize: 12,\n    fontWeight: '500',\n    color: 'coral'\n  },\n  selectedLabel: {\n    color: 'white'\n  },\n  label: {\n    textAlign: 'center',\n    marginBottom: 10,\n    fontSize: 24\n  }\n});\nexport default Test;","map":{"version":3,"names":["React","useState","View","SafeAreaView","TouchableOpacity","Text","StyleSheet","jsx","_jsx","jsxs","_jsxs","Test","_useState","_useState2","_slicedToArray","widthType","setWidthType","_useState3","_useState4","heightType","setHeightType","PreviewLayout","widthValues","heightValues","children","style","alignSelf","backgroundColor","height","width","padding","styles","box","_ref","flex","row","label","map","value","onPress","button","selected","buttonLabel","selectedLabel","create","flexDirection","flexWrap","borderRadius","marginRight","marginBottom","shadowOpacity","borderWidth","fontSize","fontWeight","color","textAlign"],"sources":["D:/Finacial-Management/front-end/components/Test.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {\r\n  View,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Text,\r\n  StyleSheet,\r\n} from 'react-native';\r\n\r\nconst Test = () => {\r\n  const [widthType, setWidthType] = useState('auto');\r\n  const [heightType, setHeightType] = useState('auto');\r\n\r\n  return (\r\n    <PreviewLayout\r\n      widthType={widthType}\r\n      heightType={heightType}\r\n      widthValues={['auto', 300, '80%']}\r\n      heightValues={['auto', 200, '60%']}\r\n      setWidthType={setWidthType}\r\n      setHeightType={setHeightType}>\r\n      <View\r\n        style={{\r\n          alignSelf: 'flex-start',\r\n          backgroundColor: 'aliceblue',\r\n          height: heightType,\r\n          width: widthType,\r\n          padding: 15,\r\n        }}>\r\n        <View style={[styles.box, {backgroundColor: 'powderblue'}]} />\r\n        <View style={[styles.box, {backgroundColor: 'skyblue'}]} />\r\n        <View style={[styles.box, {backgroundColor: 'steelblue'}]} />\r\n      </View>\r\n    </PreviewLayout>\r\n  );\r\n};\r\n\r\nconst PreviewLayout = ({\r\n  children,\r\n  widthType,\r\n  heightType,\r\n  widthValues,\r\n  heightValues,\r\n  setWidthType,\r\n  setHeightType,\r\n}) => (\r\n  <SafeAreaView style={{flex: 1, padding: 10}}>\r\n    <View style={styles.row}>\r\n      <Text style={styles.label}>width </Text>\r\n      {widthValues.map(value => (\r\n        <TouchableOpacity\r\n          key={value}\r\n          onPress={() => setWidthType(value)}\r\n          style={[styles.button, widthType === value && styles.selected]}>\r\n          <Text\r\n            style={[\r\n              styles.buttonLabel,\r\n              widthType === value && styles.selectedLabel,\r\n            ]}>\r\n            {value}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n    </View>\r\n    <View style={styles.row}>\r\n      <Text style={styles.label}>height </Text>\r\n      {heightValues.map(value => (\r\n        <TouchableOpacity\r\n          key={value}\r\n          onPress={() => setHeightType(value)}\r\n          style={[styles.button, heightType === value && styles.selected]}>\r\n          <Text\r\n            style={[\r\n              styles.buttonLabel,\r\n              heightType === value && styles.selectedLabel,\r\n            ]}>\r\n            {value}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n    </View>\r\n    {children}\r\n  </SafeAreaView>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  box: {\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n  },\r\n  button: {\r\n    padding: 8,\r\n    borderRadius: 4,\r\n    backgroundColor: 'oldlace',\r\n    alignSelf: 'flex-start',\r\n    marginRight: 10,\r\n    marginBottom: 10,\r\n  },\r\n  selected: {\r\n    backgroundColor: 'coral',\r\n    shadowOpacity: 0,\r\n    borderWidth: 0,\r\n  },\r\n  buttonLabel: {\r\n    fontSize: 12,\r\n    fontWeight: '500',\r\n    color: 'coral',\r\n  },\r\n  selectedLabel: {\r\n    color: 'white',\r\n  },\r\n  label: {\r\n    textAlign: 'center',\r\n    marginBottom: 10,\r\n    fontSize: 24,\r\n  },\r\n});\r\n\r\nexport default Test;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}