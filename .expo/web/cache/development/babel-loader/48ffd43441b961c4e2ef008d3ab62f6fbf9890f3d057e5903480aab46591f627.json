{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Test = function Test() {\n  var _useState = useState(10),\n    _useState2 = _slicedToArray(_useState, 2),\n    rowGap = _useState2[0],\n    setRowGap = _useState2[1];\n  var _useState3 = useState(10),\n    _useState4 = _slicedToArray(_useState3, 2),\n    columnGap = _useState4[0],\n    setColumnGap = _useState4[1];\n  return _jsxs(PreviewLayout, {\n    columnGap: columnGap,\n    handleColumnGapChange: setColumnGap,\n    rowGap: rowGap,\n    handleRowGapChange: setRowGap,\n    children: [_jsx(View, {\n      style: [styles.box, styles.box1]\n    }), _jsx(View, {\n      style: [styles.box, styles.box2]\n    }), _jsx(View, {\n      style: [styles.box, styles.box3]\n    }), _jsx(View, {\n      style: [styles.box, styles.box4]\n    }), _jsx(View, {\n      style: [styles.box, styles.box5]\n    })]\n  });\n};\nvar PreviewLayout = function PreviewLayout(_ref) {\n  var children = _ref.children,\n    handleColumnGapChange = _ref.handleColumnGapChange,\n    handleRowGapChange = _ref.handleRowGapChange,\n    rowGap = _ref.rowGap,\n    columnGap = _ref.columnGap;\n  return _jsxs(View, {\n    style: styles.previewContainer,\n    children: [_jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsxs(View, {\n        style: styles.itemsCenter,\n        children: [_jsx(Text, {\n          children: \"Row Gap\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          value: rowGap,\n          onChangeText: function onChangeText(v) {\n            return handleRowGapChange(Number(v));\n          }\n        })]\n      }), _jsxs(View, {\n        style: styles.itemsCenter,\n        children: [_jsx(Text, {\n          children: \"Column Gap\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          value: columnGap,\n          onChangeText: function onChangeText(v) {\n            return handleColumnGapChange(Number(v));\n          }\n        })]\n      })]\n    }), _jsx(View, {\n      style: [styles.container, {\n        rowGap: rowGap,\n        columnGap: columnGap\n      }],\n      children: children\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  itemsCenter: {\n    alignItems: 'center'\n  },\n  inputContainer: {\n    gap: 4,\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  },\n  previewContainer: {\n    padding: 10,\n    flex: 1\n  },\n  input: {\n    borderBottomWidth: 1,\n    paddingVertical: 3,\n    width: 50,\n    textAlign: 'center'\n  },\n  container: {\n    flex: 1,\n    marginTop: 8,\n    backgroundColor: 'aliceblue',\n    maxHeight: 400,\n    flexWrap: 'wrap',\n    alignContent: 'flex-start'\n  },\n  box: {\n    width: 50,\n    height: 80\n  },\n  box1: {\n    backgroundColor: 'orangered'\n  },\n  box2: {\n    backgroundColor: 'orange'\n  },\n  box3: {\n    backgroundColor: 'mediumseagreen'\n  },\n  box4: {\n    backgroundColor: 'deepskyblue'\n  },\n  box5: {\n    backgroundColor: 'mediumturquoise'\n  }\n});\nexport default Test;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","TextInput","jsx","_jsx","jsxs","_jsxs","Test","_useState","_useState2","_slicedToArray","rowGap","setRowGap","_useState3","_useState4","columnGap","setColumnGap","PreviewLayout","handleColumnGapChange","handleRowGapChange","children","style","styles","box","box1","box2","box3","box4","box5","_ref","previewContainer","inputContainer","itemsCenter","input","value","onChangeText","v","Number","container","create","alignItems","gap","flexDirection","justifyContent","padding","flex","borderBottomWidth","paddingVertical","width","textAlign","marginTop","backgroundColor","maxHeight","flexWrap","alignContent","height"],"sources":["D:/Finacial-Management/front-end/components/Test.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {View, Text, StyleSheet, TextInput} from 'react-native';\r\n\r\nconst Test = () => {\r\n  const [rowGap, setRowGap] = useState(10);\r\n  const [columnGap, setColumnGap] = useState(10);\r\n\r\n  return (\r\n    <PreviewLayout\r\n      columnGap={columnGap}\r\n      handleColumnGapChange={setColumnGap}\r\n      rowGap={rowGap}\r\n      handleRowGapChange={setRowGap}>\r\n      <View style={[styles.box, styles.box1]} />\r\n      <View style={[styles.box, styles.box2]} />\r\n      <View style={[styles.box, styles.box3]} />\r\n      <View style={[styles.box, styles.box4]} />\r\n      <View style={[styles.box, styles.box5]} />\r\n    </PreviewLayout>\r\n  );\r\n};\r\n\r\nconst PreviewLayout = ({\r\n  children,\r\n  handleColumnGapChange,\r\n  handleRowGapChange,\r\n  rowGap,\r\n  columnGap,\r\n}) => (\r\n  <View style={styles.previewContainer}>\r\n    <View style={styles.inputContainer}>\r\n      <View style={styles.itemsCenter}>\r\n        <Text>Row Gap</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          value={rowGap}\r\n          onChangeText={v => handleRowGapChange(Number(v))}\r\n        />\r\n      </View>\r\n      <View style={styles.itemsCenter}>\r\n        <Text>Column Gap</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          value={columnGap}\r\n          onChangeText={v => handleColumnGapChange(Number(v))}\r\n        />\r\n      </View>\r\n    </View>\r\n    <View style={[styles.container, {rowGap, columnGap}]}>{children}</View>\r\n  </View>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  itemsCenter: {alignItems: 'center'},\r\n  inputContainer: {\r\n    gap: 4,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n  },\r\n  previewContainer: {padding: 10, flex: 1},\r\n  input: {\r\n    borderBottomWidth: 1,\r\n    paddingVertical: 3,\r\n    width: 50,\r\n    textAlign: 'center',\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    marginTop: 8,\r\n    backgroundColor: 'aliceblue',\r\n    maxHeight: 400,\r\n    flexWrap: 'wrap',\r\n    alignContent: 'flex-start',\r\n  },\r\n  box: {\r\n    width: 50,\r\n    height: 80,\r\n  },\r\n  box1: {\r\n    backgroundColor: 'orangered',\r\n  },\r\n  box2: {\r\n    backgroundColor: 'orange',\r\n  },\r\n  box3: {\r\n    backgroundColor: 'mediumseagreen',\r\n  },\r\n  box4: {\r\n    backgroundColor: 'deepskyblue',\r\n  },\r\n  box5: {\r\n    backgroundColor: 'mediumturquoise',\r\n  },\r\n});\r\n\r\nexport default Test;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}