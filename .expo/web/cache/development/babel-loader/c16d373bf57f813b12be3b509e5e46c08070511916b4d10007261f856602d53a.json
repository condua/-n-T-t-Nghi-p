{"ast":null,"code":"import createNumberMask from \"./createNumberMask\";\nvar BRL_CAR_PLATE = [/[a-zA-Z]/, /[a-zA-Z]/, /[a-zA-Z]/, '-', /\\d/, /\\w/, /\\d/, /\\d/];\nvar BRL_CNPJ = [/\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/];\nvar BRL_CPF = [/\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/];\nvar BRL_CPF_CNPJ = function BRL_CPF_CNPJ(text) {\n  var rawValue = (text === null || text === void 0 ? void 0 : text.replace(/\\D+/g, '')) || '';\n  return rawValue.length <= 11 ? BRL_CPF : BRL_CNPJ;\n};\nvar BRL_CURRENCY = createNumberMask({\n  prefix: ['R', '$', ' '],\n  separator: ',',\n  delimiter: '.',\n  precision: 2\n});\nvar USA_PHONE = [\"(\", /[2-9]/, /\\d/, /\\d/, ')', ' ', /[2-9]/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/];\nvar BRL_PHONE = ['(', /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/];\nvar CREDIT_CARD = [/\\d/, /\\d/, /\\d/, /\\d/, ' ', [/\\d/], [/\\d/], [/\\d/], [/\\d/], ' ', [/\\d/], [/\\d/], [/\\d/], [/\\d/], ' ', /\\d/, /\\d/, /\\d/, /\\d/];\nvar DATE_DDMMYYYY = function DATE_DDMMYYYY() {\n  var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var cleanText = text.replace(/\\D+/g, '');\n  var secondDigitDayMask = /\\d/;\n  if (cleanText.charAt(0) === '0') {\n    secondDigitDayMask = /[1-9]/;\n  }\n  if (cleanText.charAt(0) === '3') {\n    secondDigitDayMask = /[01]/;\n  }\n  var secondDigitMonthMask = /\\d/;\n  if (cleanText.charAt(2) === '0') {\n    secondDigitMonthMask = /[1-9]/;\n  }\n  if (cleanText.charAt(2) === '1') {\n    secondDigitMonthMask = /[012]/;\n  }\n  return [/[0-3]/, secondDigitDayMask, '/', /[0-1]/, secondDigitMonthMask, '/', /\\d/, /\\d/, /\\d/, /\\d/];\n};\nvar DATE_MMDDYYYY = function DATE_MMDDYYYY() {\n  var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var cleanText = text.replace(/\\D+/g, '');\n  var secondDigitMonthMask = /\\d/;\n  if (cleanText.charAt(0) === '0') {\n    secondDigitMonthMask = /[1-9]/;\n  }\n  if (cleanText.charAt(0) === '1') {\n    secondDigitMonthMask = /[012]/;\n  }\n  var secondDigitDayMask = /\\d/;\n  if (cleanText.charAt(2) === '0') {\n    secondDigitDayMask = /[1-9]/;\n  }\n  if (cleanText.charAt(2) === '3') {\n    secondDigitDayMask = /[01]/;\n  }\n  return [/[0-1]/, secondDigitMonthMask, '/', /[0-3]/, secondDigitDayMask, '/', /\\d/, /\\d/, /\\d/, /\\d/];\n};\nvar DATE_YYYYMMDD = function DATE_YYYYMMDD() {\n  var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var cleanText = text.replace(/\\D+/g, '');\n  var secondDigitMonthMask = /\\d/;\n  if (cleanText.charAt(4) === '0') {\n    secondDigitMonthMask = /[1-9]/;\n  }\n  if (cleanText.charAt(4) === '1') {\n    secondDigitMonthMask = /[012]/;\n  }\n  var secondDigitDayMask = /\\d/;\n  if (cleanText.charAt(6) === '0') {\n    secondDigitDayMask = /[1-9]/;\n  }\n  if (cleanText.charAt(6) === '3') {\n    secondDigitDayMask = /[01]/;\n  }\n  return [/\\d/, /\\d/, /\\d/, /\\d/, '/', /[0-1]/, secondDigitMonthMask, '/', /[0-3]/, secondDigitDayMask];\n};\nvar ZIP_CODE = [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/];\nexport default {\n  BRL_CAR_PLATE: BRL_CAR_PLATE,\n  BRL_CNPJ: BRL_CNPJ,\n  BRL_CPF: BRL_CPF,\n  BRL_CPF_CNPJ: BRL_CPF_CNPJ,\n  BRL_CURRENCY: BRL_CURRENCY,\n  BRL_PHONE: BRL_PHONE,\n  USA_PHONE: USA_PHONE,\n  CREDIT_CARD: CREDIT_CARD,\n  DATE_DDMMYYYY: DATE_DDMMYYYY,\n  DATE_MMDDYYYY: DATE_MMDDYYYY,\n  DATE_YYYYMMDD: DATE_YYYYMMDD,\n  ZIP_CODE: ZIP_CODE\n};","map":{"version":3,"names":["createNumberMask","BRL_CAR_PLATE","BRL_CNPJ","BRL_CPF","BRL_CPF_CNPJ","text","rawValue","replace","length","BRL_CURRENCY","prefix","separator","delimiter","precision","USA_PHONE","BRL_PHONE","CREDIT_CARD","DATE_DDMMYYYY","arguments","undefined","cleanText","secondDigitDayMask","charAt","secondDigitMonthMask","DATE_MMDDYYYY","DATE_YYYYMMDD","ZIP_CODE"],"sources":["D:\\Finacial-Management\\Front-end\\node_modules\\react-native-mask-input\\lib\\module\\Masks.ts"],"sourcesContent":["import createNumberMask from './createNumberMask';\r\nimport type { Mask, MaskArray } from './formatWithMask.types';\r\n\r\nconst BRL_CAR_PLATE = [/[a-zA-Z]/, /[a-zA-Z]/, /[a-zA-Z]/, '-', /\\d/, /\\w/, /\\d/, /\\d/];\r\n\r\nconst BRL_CNPJ = [\r\n  /\\d/,\r\n  /\\d/,\r\n  '.',\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/,\r\n  '.',\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/,\r\n  '/',\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/,\r\n  '-',\r\n  /\\d/,\r\n  /\\d/,\r\n];\r\n\r\nconst BRL_CPF = [\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/,\r\n  '.',\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/,\r\n  '.',\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/,\r\n  '-',\r\n  /\\d/,\r\n  /\\d/,\r\n];\r\n\r\nconst BRL_CPF_CNPJ = (text?: string) => {\r\n  const rawValue = text?.replace(/\\D+/g, '') || '';\r\n  return rawValue.length <= 11 ? BRL_CPF : BRL_CNPJ;\r\n};\r\n\r\nconst BRL_CURRENCY = createNumberMask({\r\n  prefix: ['R', '$', ' '],\r\n  separator: ',',\r\n  delimiter: '.',\r\n  precision: 2,\r\n});\r\n\r\nconst USA_PHONE = [\r\n  `(`,\r\n  /[2-9]/,\r\n  /\\d/,\r\n  /\\d/,\r\n  ')',\r\n  ' ',\r\n  /[2-9]/,\r\n  /\\d/,\r\n  /\\d/,\r\n  '-',\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/,\r\n];\r\n\r\nconst BRL_PHONE = [\r\n  '(',\r\n  /\\d/,\r\n  /\\d/,\r\n  ')',\r\n  ' ',\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/,\r\n  '-',\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/,\r\n];\r\n\r\nconst CREDIT_CARD = [\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/,\r\n  ' ',\r\n  [/\\d/],\r\n  [/\\d/],\r\n  [/\\d/],\r\n  [/\\d/],\r\n  ' ',\r\n  [/\\d/],\r\n  [/\\d/],\r\n  [/\\d/],\r\n  [/\\d/],\r\n  ' ',\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/,\r\n  /\\d/,\r\n] as MaskArray;\r\n\r\nconst DATE_DDMMYYYY: Mask = (text = '') => {\r\n  const cleanText = text.replace(/\\D+/g, '');\r\n\r\n  let secondDigitDayMask = /\\d/;\r\n\r\n  if (cleanText.charAt(0) === '0') {\r\n    secondDigitDayMask = /[1-9]/;\r\n  }\r\n  if (cleanText.charAt(0) === '3') {\r\n    secondDigitDayMask = /[01]/;\r\n  }\r\n\r\n  let secondDigitMonthMask = /\\d/;\r\n\r\n  if (cleanText.charAt(2) === '0') {\r\n    secondDigitMonthMask = /[1-9]/;\r\n  }\r\n  if (cleanText.charAt(2) === '1') {\r\n    secondDigitMonthMask = /[012]/;\r\n  }\r\n\r\n  return [\r\n    /[0-3]/,\r\n    secondDigitDayMask,\r\n    '/',\r\n    /[0-1]/,\r\n    secondDigitMonthMask,\r\n    '/',\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n  ];\r\n};\r\n\r\nconst DATE_MMDDYYYY: Mask = (text = '') => {\r\n  const cleanText = text.replace(/\\D+/g, '');\r\n\r\n  let secondDigitMonthMask = /\\d/;\r\n\r\n  if (cleanText.charAt(0) === '0') {\r\n    secondDigitMonthMask = /[1-9]/;\r\n  }\r\n  if (cleanText.charAt(0) === '1') {\r\n    secondDigitMonthMask = /[012]/;\r\n  }\r\n\r\n  let secondDigitDayMask = /\\d/;\r\n\r\n  if (cleanText.charAt(2) === '0') {\r\n    secondDigitDayMask = /[1-9]/;\r\n  }\r\n  if (cleanText.charAt(2) === '3') {\r\n    secondDigitDayMask = /[01]/;\r\n  }\r\n\r\n  return [\r\n    /[0-1]/,\r\n    secondDigitMonthMask,\r\n    '/',\r\n    /[0-3]/,\r\n    secondDigitDayMask,\r\n    '/',\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n  ];\r\n};\r\n\r\nconst DATE_YYYYMMDD: Mask = (text = '') => {\r\n  const cleanText = text.replace(/\\D+/g, '');\r\n\r\n  let secondDigitMonthMask = /\\d/;\r\n\r\n  if (cleanText.charAt(4) === '0') {\r\n    secondDigitMonthMask = /[1-9]/;\r\n  }\r\n  if (cleanText.charAt(4) === '1') {\r\n    secondDigitMonthMask = /[012]/;\r\n  }\r\n\r\n  let secondDigitDayMask = /\\d/;\r\n\r\n  if (cleanText.charAt(6) === '0') {\r\n    secondDigitDayMask = /[1-9]/;\r\n  }\r\n  if (cleanText.charAt(6) === '3') {\r\n    secondDigitDayMask = /[01]/;\r\n  }\r\n\r\n  return [\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    '/',\r\n    /[0-1]/,\r\n    secondDigitMonthMask,\r\n    '/',\r\n    /[0-3]/,\r\n    secondDigitDayMask,\r\n  ];\r\n};\r\n\r\nconst ZIP_CODE = [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/];\r\n\r\nexport default {\r\n  BRL_CAR_PLATE,\r\n  BRL_CNPJ,\r\n  BRL_CPF,\r\n  BRL_CPF_CNPJ,\r\n  BRL_CURRENCY,\r\n  BRL_PHONE,\r\n  USA_PHONE,\r\n  CREDIT_CARD,\r\n  DATE_DDMMYYYY,\r\n  DATE_MMDDYYYY,\r\n  DATE_YYYYMMDD,\r\n  ZIP_CODE,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}